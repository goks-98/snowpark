CREATE OR REPLACE PROCEDURE OIL_AND_GAS.CONFORMED.JS_PROCEDURE()
RETURNS VARCHAR(500)
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS
$$

	var result = ""
	my_statement = snowflake.createStatement( {sqlText: `INSERT INTO "OIL_AND_GAS"."CONFORMED"."CUSTOMER_TABLE"
														(
															CUSTOMER_ID,
															DATE,
															SALUTATION,
															FIRST_NAME,
															LAST_NAME
														)
														SELECT C_CUSTOMER_SK
															  ,TO_CHAR(D_DATE, 'YYYYMMDD')
															  ,C_SALUTATION
															  ,C_FIRST_NAME
															  ,C_LAST_NAME
														FROM SNOWFLAKE_SAMPLE_DATA.TCPDS_SF100CL.CUSTOMER C
														JOIN SNOWFLAKE_SAMPLE_DATA.TCPDS_SF100CL.DATE_DIM D 
														ON D_DATE_SK = C_FIRST_SHIPTO_DATE_SK
														LIMIT 100`
											}	);
											
	my_statement_2 = snowflake.createStatement( {sqlText: `INSERT INTO "OIL_AND_GAS"."CONFORMED"."CUSTOMER_TABLE"
														(
															CUSTOMER_ID,
															DATE,
															SALUTATION,
															FIRST_NAME,
															LAST_NAME
														)
														SELECT C_CUSTOMER_SK
															  ,TO_CHAR(D_DATE, 'YYYYMMDD')
															  ,C_SALUTATION
															  ,C_FIRST_NAME
															  ,C_LAST_NAME
														FROM SNOWFLAKE_SAMPLE_DATA.TCPDS_SF100CL.CUSTOMER C
														JOIN SNOWFLAKE_SAMPLE_DATA.TCPDS_SF100CL.DATE_DIM D 
														ON D_DATE_SK = C_FIRST_SHIPTO_DATE_SK
														LIMIT 100`
											}	);
											
	try {
			my_statement.execute()
			my_statement_2.execute()
		}
		
	catch(err) {
				result = "Failed:\nCode: " +err.code+ "\n State: " +err.state;
				result += "\nMessage: " +err.message;
				result += "\nStack Trace:\n" +err.stackTracetxt;
				}
	return result;

$$

CREATE TABLE CUSTOMER_TABLE (
    CUSTOMER_ID     VARCHAR(),
    DATE    DATE,
    SALUTATION,
    FIRST_NAME,
    LAST_NAME)
	
	
	
1. FIX API
2. CEHCK REPOS
3. CHECK CODES AND VALIDATE IF THEY WORK 
4. MAKE SOME CODE CHANGES IF NECESSARY 
5. PPT CHANGES 
6. PRACTICE PRESENTING
